{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","key","handleKeyup","event","setState","window","addEventListener","this","removeEventListener","className","React","PureComponent","ReactDOM","render","document","getElementById"],"mappings":"oNAMaA,EAAb,4MACEC,MAAe,CACbC,IAAK,IAFT,EAaEC,YAAc,SAACC,GACb,EAAKC,SAAS,CAAEH,IAAKE,EAAMF,OAd/B,uDAKE,WACEI,OAAOC,iBAAiB,QAASC,KAAKL,eAN1C,kCASE,WACEG,OAAOG,oBAAoB,QAASD,KAAKL,eAV7C,oBAiBE,WACE,IAAQD,EAAQM,KAAKP,MAAbC,IAER,OACE,qBAAKQ,UAAU,MAAf,SACE,mBACEA,UAAU,eADZ,SAGGR,EAAG,mCAC6BA,EAD7B,KAEA,kCA3Bd,GAAyBS,IAAMC,e,MCD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.4769032e.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  key: string,\n};\n\nexport class App extends React.PureComponent<{}, State> {\n  state: State = {\n    key: '',\n  };\n\n  componentDidMount() {\n    window.addEventListener('keyup', this.handleKeyup);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keyup', this.handleKeyup);\n  }\n\n  handleKeyup = (event: KeyboardEvent) => {\n    this.setState({ key: event.key });\n  };\n\n  render() {\n    const { key } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p\n          className=\"App__message\"\n        >\n          {key\n            ? (`The last pressed key is [${key}]`)\n            : 'Nothing was pressed yet'}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}